// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220602150308_AddImagesToSeeding")]
    partial class AddImagesToSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Aircraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AircraftTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstSeen")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasSpecialLivery")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftTypeId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Aircrafts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6923ed57-0854-43f6-bace-b46e03c3de8c"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6620),
                            AircraftTypeId = new Guid("d0f6e18b-fdfb-47a5-aee8-291672abf248"),
                            AirlineId = new Guid("964ea51d-0d8b-4d6a-b7da-47c93094deab"),
                            FirstSeen = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/IMG_2232.jpg",
                            LastSeen = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6640),
                            Registration = "OO-SNJ"
                        },
                        new
                        {
                            Id = new Guid("e5431a32-caf1-47c7-8b13-a630132a284a"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6659),
                            AircraftTypeId = new Guid("9573390e-aab9-483a-9cba-75fc30fdc81b"),
                            AirlineId = new Guid("43f568b9-f5dc-4e6f-b429-3bcb6c23229c"),
                            FirstSeen = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/95656_1575311187.jpg",
                            LastSeen = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6663),
                            Registration = "OO-LOE"
                        },
                        new
                        {
                            Id = new Guid("aa0fa9f1-39a2-4f78-9104-5f9e364781fc"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6671),
                            AircraftTypeId = new Guid("3f9ea1d7-71f0-4577-b55c-bf2ed58805e3"),
                            AirlineId = new Guid("7ecaef2a-45f1-4930-b623-e9b660cda8eb"),
                            FirstSeen = new DateTime(2020, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/1179688.jpg",
                            LastSeen = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6674),
                            Registration = "D-ALCC"
                        },
                        new
                        {
                            Id = new Guid("30ccb879-5e24-40df-b7cf-836b0ad16313"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6681),
                            AircraftTypeId = new Guid("8031c796-ee62-40ea-bbbd-287db9b748c6"),
                            AirlineId = new Guid("0e182523-012e-443a-af95-bf0061309655"),
                            FirstSeen = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = true,
                            Image = "images/93540_1598318875.jpg",
                            LastSeen = new DateTime(2021, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6685),
                            Registration = "LX-VCF"
                        },
                        new
                        {
                            Id = new Guid("ae818817-2306-4afe-9daf-6909daffd85d"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6692),
                            AircraftTypeId = new Guid("089e20c3-662c-471f-a31a-73479818bce6"),
                            AirlineId = new Guid("3dd0aca4-548c-4cf0-b540-b035334fea20"),
                            FirstSeen = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/IMG_2287.jpg",
                            LastSeen = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6696),
                            Registration = "JA872A"
                        },
                        new
                        {
                            Id = new Guid("15bcb431-d45f-4b41-9f33-53abf736a754"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6703),
                            AircraftTypeId = new Guid("9841abae-4be4-4da4-a2af-77af641c9348"),
                            AirlineId = new Guid("37e18490-4683-47aa-a27f-359f0bb60525"),
                            FirstSeen = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/13047_1527973248.jpg",
                            LastSeen = new DateTime(2021, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6707),
                            Registration = "A6-EDD"
                        },
                        new
                        {
                            Id = new Guid("3d520553-7aa5-4fa8-bd2d-13491944bf66"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6721),
                            AircraftTypeId = new Guid("ea604c2f-a468-4610-b2c4-67254e09c9e9"),
                            AirlineId = new Guid("37e18490-4683-47aa-a27f-359f0bb60525"),
                            FirstSeen = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/IMG_2065.jpg",
                            LastSeen = new DateTime(2021, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6724),
                            Registration = "A6-EQA"
                        },
                        new
                        {
                            Id = new Guid("3c550127-de5f-42dd-9690-427a6416c999"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6732),
                            AircraftTypeId = new Guid("82aaaa67-255e-4e3a-8308-516fee583a4b"),
                            AirlineId = new Guid("95fb0ecc-eb8a-4021-a8dd-9c1b0e38a86c"),
                            FirstSeen = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/12199_1554835793.jpg",
                            LastSeen = new DateTime(2021, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6736),
                            Registration = "OO-ABA"
                        },
                        new
                        {
                            Id = new Guid("fd7b2470-8c66-4dd4-9add-f95992d71e1e"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6743),
                            AircraftTypeId = new Guid("a918c937-d09b-49c4-88d6-2a04955b2145"),
                            AirlineId = new Guid("b43188f5-5029-4446-bdef-22117a111ced"),
                            FirstSeen = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/10569_1567245788.jpg",
                            LastSeen = new DateTime(2021, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6746),
                            Registration = "G-XWBA"
                        },
                        new
                        {
                            Id = new Guid("981c7c2e-5b32-424a-a4f9-a599bbb4db08"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6753),
                            AircraftTypeId = new Guid("fc076baf-62e1-4e49-9151-cf9c77656b28"),
                            AirlineId = new Guid("47fb36ab-ec0b-48dd-853a-0c0d3124f40f"),
                            FirstSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = true,
                            Image = "images/27669_1580328749.jpg",
                            LastSeen = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6756),
                            Registration = "YL-CSJ"
                        },
                        new
                        {
                            Id = new Guid("5d7a1249-8579-4fa0-80c2-57be7bf61cf1"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6824),
                            AircraftTypeId = new Guid("fc076baf-62e1-4e49-9151-cf9c77656b28"),
                            AirlineId = new Guid("47fb36ab-ec0b-48dd-853a-0c0d3124f40f"),
                            FirstSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = true,
                            Image = "images/1309661.jpg",
                            LastSeen = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6828),
                            Registration = "YL-CSK"
                        },
                        new
                        {
                            Id = new Guid("5a8946dc-22b3-49d6-bf6d-6a20ed5f6c62"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6835),
                            AircraftTypeId = new Guid("fc076baf-62e1-4e49-9151-cf9c77656b28"),
                            AirlineId = new Guid("47fb36ab-ec0b-48dd-853a-0c0d3124f40f"),
                            FirstSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = true,
                            Image = "images/1195582.jpg",
                            LastSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6838),
                            Registration = "YL-CSL"
                        },
                        new
                        {
                            Id = new Guid("3a7bb1bd-c0c9-4a77-8980-b768afe916f7"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6847),
                            AircraftTypeId = new Guid("fc076baf-62e1-4e49-9151-cf9c77656b28"),
                            AirlineId = new Guid("47fb36ab-ec0b-48dd-853a-0c0d3124f40f"),
                            FirstSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/44344_1544504053.jpg",
                            LastSeen = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6850),
                            Registration = "YL-CSN"
                        },
                        new
                        {
                            Id = new Guid("8f8b2f77-97c0-4c41-8012-6025057b2473"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6857),
                            AircraftTypeId = new Guid("e2277b3b-0c45-465e-9e55-4b06ca5ab320"),
                            AirlineId = new Guid("a0ea4c8d-446c-479f-8127-b1a1969dab48"),
                            FirstSeen = new DateTime(2021, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/12946_1520765802.jpg",
                            LastSeen = new DateTime(2021, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6860),
                            Registration = "PH-EZT"
                        },
                        new
                        {
                            Id = new Guid("4d00c895-268d-428c-b8c2-484c87edd9c3"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6870),
                            AircraftTypeId = new Guid("001cfcbc-4b72-490b-b495-d3363bb9a499"),
                            AirlineId = new Guid("964ea51d-0d8b-4d6a-b7da-47c93094deab"),
                            FirstSeen = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/OO-SSL_EBBR_11-02-22_4.jpg",
                            LastSeen = new DateTime(2022, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6874),
                            Registration = "OO-SSL"
                        },
                        new
                        {
                            Id = new Guid("5b460cc3-59f9-47bf-8190-a9b225e1d189"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6881),
                            AircraftTypeId = new Guid("5ae76cf4-a778-4cca-b949-de90a3ad8e44"),
                            AirlineId = new Guid("f902dc81-28d7-4fea-938e-7cc3f82c8c0d"),
                            FirstSeen = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/N12003_EBBR_11-02-22_6.jpg",
                            LastSeen = new DateTime(2022, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6885),
                            Registration = "N12003"
                        },
                        new
                        {
                            Id = new Guid("83162727-ffde-463c-84d1-6b5d8e333128"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6891),
                            AircraftTypeId = new Guid("d0e1c5ae-1695-41ae-9dca-1d39dec9c867"),
                            AirlineId = new Guid("43f568b9-f5dc-4e6f-b429-3bcb6c23229c"),
                            FirstSeen = new DateTime(2020, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasSpecialLivery = false,
                            Image = "images/OO-TNB-EBBR_11-02-22_4.jpg",
                            LastSeen = new DateTime(2022, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(6895),
                            Registration = "OO-TNB"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.AircraftAtAirport", b =>
                {
                    b.Property<Guid>("AircraftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AircraftId", "AirportId");

                    b.HasIndex("AirportId");

                    b.ToTable("AircraftAtAirports");

                    b.HasData(
                        new
                        {
                            AircraftId = new Guid("6923ed57-0854-43f6-bace-b46e03c3de8c"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("6923ed57-0854-43f6-bace-b46e03c3de8c"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        },
                        new
                        {
                            AircraftId = new Guid("6923ed57-0854-43f6-bace-b46e03c3de8c"),
                            AirportId = new Guid("df0696f7-36ac-4ed6-bdb4-8fec95f0af48")
                        },
                        new
                        {
                            AircraftId = new Guid("e5431a32-caf1-47c7-8b13-a630132a284a"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("e5431a32-caf1-47c7-8b13-a630132a284a"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        },
                        new
                        {
                            AircraftId = new Guid("aa0fa9f1-39a2-4f78-9104-5f9e364781fc"),
                            AirportId = new Guid("df0696f7-36ac-4ed6-bdb4-8fec95f0af48")
                        },
                        new
                        {
                            AircraftId = new Guid("30ccb879-5e24-40df-b7cf-836b0ad16313"),
                            AirportId = new Guid("f6ea5ef6-d748-481b-9be1-3c7a9d90f3e6")
                        },
                        new
                        {
                            AircraftId = new Guid("30ccb879-5e24-40df-b7cf-836b0ad16313"),
                            AirportId = new Guid("e6eb509a-68de-4ba0-8b34-b797d1266cfc")
                        },
                        new
                        {
                            AircraftId = new Guid("30ccb879-5e24-40df-b7cf-836b0ad16313"),
                            AirportId = new Guid("3eec65ab-1991-4530-9a50-67cf55bc210a")
                        },
                        new
                        {
                            AircraftId = new Guid("30ccb879-5e24-40df-b7cf-836b0ad16313"),
                            AirportId = new Guid("8c9dadf9-b912-4798-8be9-cc56ed66a1ce")
                        },
                        new
                        {
                            AircraftId = new Guid("ae818817-2306-4afe-9daf-6909daffd85d"),
                            AirportId = new Guid("df0696f7-36ac-4ed6-bdb4-8fec95f0af48")
                        },
                        new
                        {
                            AircraftId = new Guid("ae818817-2306-4afe-9daf-6909daffd85d"),
                            AirportId = new Guid("a3b509c1-1fda-491c-827c-b9042f327479")
                        },
                        new
                        {
                            AircraftId = new Guid("ae818817-2306-4afe-9daf-6909daffd85d"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("15bcb431-d45f-4b41-9f33-53abf736a754"),
                            AirportId = new Guid("8c9dadf9-b912-4798-8be9-cc56ed66a1ce")
                        },
                        new
                        {
                            AircraftId = new Guid("15bcb431-d45f-4b41-9f33-53abf736a754"),
                            AirportId = new Guid("585133d3-f45d-4754-961c-bd30487a53b3")
                        },
                        new
                        {
                            AircraftId = new Guid("15bcb431-d45f-4b41-9f33-53abf736a754"),
                            AirportId = new Guid("01b6c3fe-dfa7-4c0f-b4ca-1497ecc447f7")
                        },
                        new
                        {
                            AircraftId = new Guid("15bcb431-d45f-4b41-9f33-53abf736a754"),
                            AirportId = new Guid("e6eb509a-68de-4ba0-8b34-b797d1266cfc")
                        },
                        new
                        {
                            AircraftId = new Guid("3d520553-7aa5-4fa8-bd2d-13491944bf66"),
                            AirportId = new Guid("8c9dadf9-b912-4798-8be9-cc56ed66a1ce")
                        },
                        new
                        {
                            AircraftId = new Guid("3d520553-7aa5-4fa8-bd2d-13491944bf66"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("3d520553-7aa5-4fa8-bd2d-13491944bf66"),
                            AirportId = new Guid("01b6c3fe-dfa7-4c0f-b4ca-1497ecc447f7")
                        },
                        new
                        {
                            AircraftId = new Guid("3d520553-7aa5-4fa8-bd2d-13491944bf66"),
                            AirportId = new Guid("3a466d81-3466-4fad-81eb-500eb7be8974")
                        },
                        new
                        {
                            AircraftId = new Guid("3c550127-de5f-42dd-9690-427a6416c999"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("3c550127-de5f-42dd-9690-427a6416c999"),
                            AirportId = new Guid("b2291ef3-86d3-48b4-8bd9-1ee098e57de7")
                        },
                        new
                        {
                            AircraftId = new Guid("fd7b2470-8c66-4dd4-9add-f95992d71e1e"),
                            AirportId = new Guid("b2291ef3-86d3-48b4-8bd9-1ee098e57de7")
                        },
                        new
                        {
                            AircraftId = new Guid("fd7b2470-8c66-4dd4-9add-f95992d71e1e"),
                            AirportId = new Guid("01b6c3fe-dfa7-4c0f-b4ca-1497ecc447f7")
                        },
                        new
                        {
                            AircraftId = new Guid("981c7c2e-5b32-424a-a4f9-a599bbb4db08"),
                            AirportId = new Guid("143d781c-12ca-4045-bba3-eaf3f03bb91e")
                        },
                        new
                        {
                            AircraftId = new Guid("981c7c2e-5b32-424a-a4f9-a599bbb4db08"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        },
                        new
                        {
                            AircraftId = new Guid("5d7a1249-8579-4fa0-80c2-57be7bf61cf1"),
                            AirportId = new Guid("143d781c-12ca-4045-bba3-eaf3f03bb91e")
                        },
                        new
                        {
                            AircraftId = new Guid("5d7a1249-8579-4fa0-80c2-57be7bf61cf1"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("5d7a1249-8579-4fa0-80c2-57be7bf61cf1"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        },
                        new
                        {
                            AircraftId = new Guid("5a8946dc-22b3-49d6-bf6d-6a20ed5f6c62"),
                            AirportId = new Guid("143d781c-12ca-4045-bba3-eaf3f03bb91e")
                        },
                        new
                        {
                            AircraftId = new Guid("3a7bb1bd-c0c9-4a77-8980-b768afe916f7"),
                            AirportId = new Guid("143d781c-12ca-4045-bba3-eaf3f03bb91e")
                        },
                        new
                        {
                            AircraftId = new Guid("8f8b2f77-97c0-4c41-8012-6025057b2473"),
                            AirportId = new Guid("3a466d81-3466-4fad-81eb-500eb7be8974")
                        },
                        new
                        {
                            AircraftId = new Guid("4d00c895-268d-428c-b8c2-484c87edd9c3"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("4d00c895-268d-428c-b8c2-484c87edd9c3"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        },
                        new
                        {
                            AircraftId = new Guid("4d00c895-268d-428c-b8c2-484c87edd9c3"),
                            AirportId = new Guid("01b6c3fe-dfa7-4c0f-b4ca-1497ecc447f7")
                        },
                        new
                        {
                            AircraftId = new Guid("5b460cc3-59f9-47bf-8190-a9b225e1d189"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("5b460cc3-59f9-47bf-8190-a9b225e1d189"),
                            AirportId = new Guid("7c0357cc-74d6-48e8-a135-95c752614c53")
                        },
                        new
                        {
                            AircraftId = new Guid("83162727-ffde-463c-84d1-6b5d8e333128"),
                            AirportId = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca")
                        },
                        new
                        {
                            AircraftId = new Guid("83162727-ffde-463c-84d1-6b5d8e333128"),
                            AirportId = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.AircraftType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmptyWeight")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstFlight")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ICAOCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .IsFixedLength(true);

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("WingSpan")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AircraftTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0f6e18b-fdfb-47a5-aee8-291672abf248"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 605, DateTimeKind.Local).AddTicks(5718),
                            Brand = "Airbus",
                            EmptyWeight = 42400,
                            FirstFlight = new DateTime(1987, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.76,
                            ICAOCode = "A320",
                            Length = 37.57,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(4582),
                            Type = "A320-200",
                            WingSpan = 34.100000000000001
                        },
                        new
                        {
                            Id = new Guid("9573390e-aab9-483a-9cba-75fc30fdc81b"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5418),
                            Brand = "Boeing",
                            EmptyWeight = 118000,
                            FirstFlight = new DateTime(2009, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 16.899999999999999,
                            ICAOCode = "B788",
                            Length = 56.700000000000003,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5436),
                            Type = "787-8",
                            WingSpan = 60.100000000000001
                        },
                        new
                        {
                            Id = new Guid("3f9ea1d7-71f0-4577-b55c-bf2ed58805e3"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5460),
                            Brand = "McDonnel Douglas",
                            EmptyWeight = 112748,
                            FirstFlight = new DateTime(1990, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.600000000000001,
                            ICAOCode = "MD11",
                            Length = 61.399999999999999,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5464),
                            Type = "MD-11",
                            WingSpan = 51.700000000000003
                        },
                        new
                        {
                            Id = new Guid("4049f23d-a9d4-4a80-a46d-072ea7d2caf2"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5479),
                            Brand = "Airbus",
                            EmptyWeight = 35220,
                            FirstFlight = new DateTime(2013, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.5,
                            ICAOCode = "BCS1",
                            Length = 35.0,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5483),
                            Type = "A220-100",
                            WingSpan = 35.100000000000001
                        },
                        new
                        {
                            Id = new Guid("fc076baf-62e1-4e49-9151-cf9c77656b28"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5496),
                            Brand = "Airbus",
                            EmptyWeight = 37080,
                            FirstFlight = new DateTime(2015, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.5,
                            ICAOCode = "BCS3",
                            Length = 38.710000000000001,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5500),
                            Type = "A220-300",
                            WingSpan = 35.100000000000001
                        },
                        new
                        {
                            Id = new Guid("001cfcbc-4b72-490b-b495-d3363bb9a499"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5511),
                            Brand = "Airbus",
                            EmptyWeight = 40800,
                            FirstFlight = new DateTime(1995, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.76,
                            ICAOCode = "A319",
                            Length = 33.840000000000003,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5515),
                            Type = "A319-100",
                            WingSpan = 35.799999999999997
                        },
                        new
                        {
                            Id = new Guid("86394a02-f047-4530-9579-83ad47dbc1e1"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5527),
                            Brand = "Airbus",
                            EmptyWeight = 48500,
                            FirstFlight = new DateTime(1993, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.76,
                            ICAOCode = "A321",
                            Length = 44.509999999999998,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5531),
                            Type = "A321-200",
                            WingSpan = 35.799999999999997
                        },
                        new
                        {
                            Id = new Guid("29aeea55-f59b-4e63-9af7-f98eaf5e8937"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5541),
                            Brand = "Airbus",
                            EmptyWeight = 44300,
                            FirstFlight = new DateTime(2014, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.76,
                            ICAOCode = "A20N",
                            Length = 37.57,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5545),
                            Type = "A320-neo",
                            WingSpan = 35.799999999999997
                        },
                        new
                        {
                            Id = new Guid("1f36b76a-77b0-4f2e-83b6-f280fae00fce"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5556),
                            Brand = "Airbus",
                            EmptyWeight = 50100,
                            FirstFlight = new DateTime(2016, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 11.76,
                            ICAOCode = "A21N",
                            Length = 44.509999999999998,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5560),
                            Type = "A321-neo",
                            WingSpan = 35.799999999999997
                        },
                        new
                        {
                            Id = new Guid("181e8515-d557-447f-a78c-6ee4c08943e2"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5576),
                            Brand = "Airbus",
                            EmptyWeight = 120600,
                            FirstFlight = new DateTime(1997, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.390000000000001,
                            ICAOCode = "A332",
                            Length = 58.82,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5580),
                            Type = "A330-200",
                            WingSpan = 60.299999999999997
                        },
                        new
                        {
                            Id = new Guid("8bf6be8c-5f12-4451-a1ba-1fe0bc5b5301"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5591),
                            Brand = "Airbus",
                            EmptyWeight = 129400,
                            FirstFlight = new DateTime(1992, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 16.789999999999999,
                            ICAOCode = "A333",
                            Length = 63.659999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5596),
                            Type = "A330-300",
                            WingSpan = 60.299999999999997
                        },
                        new
                        {
                            Id = new Guid("5cd4da33-4ad0-4ae0-96dd-9872dd3a7895"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5607),
                            Brand = "Airbus",
                            EmptyWeight = 132000,
                            FirstFlight = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.390000000000001,
                            ICAOCode = "A338",
                            Length = 58.82,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5611),
                            Type = "A330-800",
                            WingSpan = 64.0
                        },
                        new
                        {
                            Id = new Guid("75cf6016-3055-4eff-83be-9ca0b3464232"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5621),
                            Brand = "Airbus",
                            EmptyWeight = 135000,
                            FirstFlight = new DateTime(2017, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 16.789999999999999,
                            ICAOCode = "A339",
                            Length = 63.659999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5625),
                            Type = "A330-900",
                            WingSpan = 64.0
                        },
                        new
                        {
                            Id = new Guid("82aaaa67-255e-4e3a-8308-516fee583a4b"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5636),
                            Brand = "Airbus",
                            EmptyWeight = 131000,
                            FirstFlight = new DateTime(1991, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 16.989999999999998,
                            ICAOCode = "A343",
                            Length = 63.659999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5640),
                            Type = "A340-300",
                            WingSpan = 60.299999999999997
                        },
                        new
                        {
                            Id = new Guid("889d61b9-f656-4148-8096-1ad3b04df613"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5653),
                            Brand = "Airbus",
                            EmptyWeight = 177800,
                            FirstFlight = new DateTime(2001, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.93,
                            ICAOCode = "A346",
                            Length = 76.359999999999999,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5656),
                            Type = "A340-600",
                            WingSpan = 63.450000000000003
                        },
                        new
                        {
                            Id = new Guid("e3fe0847-d6ad-4c06-ac0d-4524132b8524"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5668),
                            Brand = "Airbus",
                            EmptyWeight = 142400,
                            FirstFlight = new DateTime(2013, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.050000000000001,
                            ICAOCode = "A359",
                            Length = 66.799999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5672),
                            Type = "A350-900",
                            WingSpan = 64.75
                        },
                        new
                        {
                            Id = new Guid("a918c937-d09b-49c4-88d6-2a04955b2145"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5683),
                            Brand = "Airbus",
                            EmptyWeight = 155000,
                            FirstFlight = new DateTime(2016, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.079999999999998,
                            ICAOCode = "A35K",
                            Length = 73.790000000000006,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5686),
                            Type = "A350-1000",
                            WingSpan = 64.75
                        },
                        new
                        {
                            Id = new Guid("9841abae-4be4-4da4-a2af-77af641c9348"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5764),
                            Brand = "Airbus",
                            EmptyWeight = 277145,
                            FirstFlight = new DateTime(2005, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 24.09,
                            ICAOCode = "A388",
                            Length = 72.719999999999999,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5769),
                            Type = "A380-800",
                            WingSpan = 79.75
                        },
                        new
                        {
                            Id = new Guid("d0e1c5ae-1695-41ae-9dca-1d39dec9c867"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5780),
                            Brand = "Boeing",
                            EmptyWeight = 41145,
                            FirstFlight = new DateTime(1994, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 12.0,
                            ICAOCode = "B738",
                            Length = 40.0,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5784),
                            Type = "737-800",
                            WingSpan = 34.32
                        },
                        new
                        {
                            Id = new Guid("a34b4e69-a43d-4373-a4f5-d627532d6b83"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5798),
                            Brand = "Boeing",
                            EmptyWeight = 45070,
                            FirstFlight = new DateTime(2016, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 12.289999999999999,
                            ICAOCode = "B38M",
                            Length = 39.520000000000003,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5802),
                            Type = "737-MAX 8",
                            WingSpan = 35.920000000000002
                        },
                        new
                        {
                            Id = new Guid("ca223507-ec42-4aaf-b9a0-c7009a9bcb02"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5813),
                            Brand = "Boeing",
                            EmptyWeight = 183523,
                            FirstFlight = new DateTime(1988, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 19.41,
                            ICAOCode = "B744",
                            Length = 70.659999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5817),
                            Type = "747-400",
                            WingSpan = 64.439999999999998
                        },
                        new
                        {
                            Id = new Guid("8031c796-ee62-40ea-bbbd-287db9b748c6"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5828),
                            Brand = "Boeing",
                            EmptyWeight = 197100,
                            FirstFlight = new DateTime(2010, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 19.399999999999999,
                            ICAOCode = "B748",
                            Length = 76.299999999999997,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5831),
                            Type = "747-8",
                            WingSpan = 68.400000000000006
                        },
                        new
                        {
                            Id = new Guid("ea604c2f-a468-4610-b2c4-67254e09c9e9"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5842),
                            Brand = "Boeing",
                            EmptyWeight = 167829,
                            FirstFlight = new DateTime(2003, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 18.5,
                            ICAOCode = "B77W",
                            Length = 73.859999999999999,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5846),
                            Type = "777-300ER",
                            WingSpan = 64.799999999999997
                        },
                        new
                        {
                            Id = new Guid("089e20c3-662c-471f-a31a-73479818bce6"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5856),
                            Brand = "Boeing",
                            EmptyWeight = 128850,
                            FirstFlight = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.02,
                            ICAOCode = "B789",
                            Length = 62.810000000000002,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5860),
                            Type = "787-9",
                            WingSpan = 60.119999999999997
                        },
                        new
                        {
                            Id = new Guid("5ae76cf4-a778-4cca-b949-de90a3ad8e44"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5871),
                            Brand = "Boeing",
                            EmptyWeight = 135500,
                            FirstFlight = new DateTime(2017, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 17.02,
                            ICAOCode = "B78X",
                            Length = 68.280000000000001,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5875),
                            Type = "787-10",
                            WingSpan = 60.119999999999997
                        },
                        new
                        {
                            Id = new Guid("e2277b3b-0c45-465e-9e55-4b06ca5ab320"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5889),
                            Brand = "Embraer",
                            EmptyWeight = 27837,
                            FirstFlight = new DateTime(2004, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 10.57,
                            ICAOCode = "E190",
                            Length = 36.25,
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(5893),
                            Type = "E190",
                            WingSpan = 28.73
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Airline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FleetSize")
                        .HasColumnType("int");

                    b.Property<string>("HeadQuarter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IATACode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true);

                    b.Property<string>("ICAOCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength(true);

                    b.Property<string>("MainAirport")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Airlines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("964ea51d-0d8b-4d6a-b7da-47c93094deab"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9000),
                            FleetSize = 49,
                            HeadQuarter = "Diegem, België",
                            IATACode = "SN",
                            ICAOCode = "BEL",
                            MainAirport = "Brussels Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9020),
                            Name = "Brussels Airlines"
                        },
                        new
                        {
                            Id = new Guid("43f568b9-f5dc-4e6f-b429-3bcb6c23229c"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9036),
                            FleetSize = 32,
                            HeadQuarter = "Zaventem, België",
                            IATACode = "TB",
                            ICAOCode = "JAF",
                            MainAirport = "Brussels Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9040),
                            Name = "TUI Fly"
                        },
                        new
                        {
                            Id = new Guid("7ecaef2a-45f1-4930-b623-e9b660cda8eb"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9046),
                            FleetSize = 18,
                            HeadQuarter = "Frankfurt, Duitsland",
                            IATACode = "LH",
                            ICAOCode = "GEC",
                            MainAirport = "Frankfurt am Main",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9050),
                            Name = "Lufthansa Cargo"
                        },
                        new
                        {
                            Id = new Guid("1b07a3e0-a6d6-4bf0-b71a-56c7122f69e6"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9055),
                            FleetSize = 75,
                            HeadQuarter = "Lissabon, Portugal",
                            IATACode = "TP",
                            ICAOCode = "TAP",
                            MainAirport = "Lisbon Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9059),
                            Name = "TAP Portugal"
                        },
                        new
                        {
                            Id = new Guid("8e80b1fe-5dd5-4c47-b2df-8da7c3f7f477"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9065),
                            FleetSize = 149,
                            HeadQuarter = "Amstelveen, Nederland",
                            IATACode = "KL",
                            ICAOCode = "KLM",
                            MainAirport = "Amsterdam Schiphol",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9068),
                            Name = "KLM"
                        },
                        new
                        {
                            Id = new Guid("a0ea4c8d-446c-479f-8127-b1a1969dab48"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9075),
                            FleetSize = 57,
                            HeadQuarter = "Haarlemmermeer, Nederland",
                            IATACode = "Wa",
                            ICAOCode = "KLC",
                            MainAirport = "Amsterdam Schiphol",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9080),
                            Name = "KLM Cityhopper"
                        },
                        new
                        {
                            Id = new Guid("4062c02f-f788-4062-a41f-a3ef56d69925"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9085),
                            FleetSize = 277,
                            HeadQuarter = "Keulen, Duitsland",
                            IATACode = "LH",
                            ICAOCode = "DLH",
                            MainAirport = "Frankurt Am Main",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9089),
                            Name = "Lufthansa"
                        },
                        new
                        {
                            Id = new Guid("24d11e58-cacc-4ee7-bda6-42531f511d59"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9100),
                            FleetSize = 214,
                            HeadQuarter = "Tremblay-en-France, Frankrijk",
                            IATACode = "AF",
                            ICAOCode = "AFR",
                            MainAirport = "Paris Charles de Gaulle",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9104),
                            Name = "Air France"
                        },
                        new
                        {
                            Id = new Guid("b43188f5-5029-4446-bdef-22117a111ced"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9110),
                            FleetSize = 254,
                            HeadQuarter = "Londen, Engeland",
                            IATACode = "BA",
                            ICAOCode = "BAW",
                            MainAirport = "Londen Heathrow",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9113),
                            Name = "British Airways"
                        },
                        new
                        {
                            Id = new Guid("6272ae88-71e6-4c99-8086-9faa2c68f748"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9118),
                            FleetSize = 502,
                            HeadQuarter = "Dublin, Ierland",
                            IATACode = "FR",
                            ICAOCode = "RYR",
                            MainAirport = "Dublin Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9122),
                            Name = "Ryanair"
                        },
                        new
                        {
                            Id = new Guid("7869c2f5-00b4-4817-b1d4-b375e09af828"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9127),
                            FleetSize = 318,
                            HeadQuarter = "Luton, Engeland",
                            IATACode = "U2",
                            ICAOCode = "EZY",
                            MainAirport = "London Luton Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9131),
                            Name = "Easyjet"
                        },
                        new
                        {
                            Id = new Guid("47fb36ab-ec0b-48dd-853a-0c0d3124f40f"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9136),
                            FleetSize = 33,
                            HeadQuarter = "Mārupe, Letland",
                            IATACode = "BT",
                            ICAOCode = "BTI",
                            MainAirport = "Riga International Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9140),
                            Name = "Air Baltic"
                        },
                        new
                        {
                            Id = new Guid("0e182523-012e-443a-af95-bf0061309655"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9145),
                            FleetSize = 22,
                            HeadQuarter = "Sandweiler, Luxemburg",
                            IATACode = "CV",
                            ICAOCode = "CLX",
                            MainAirport = "Luxembourg Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9149),
                            Name = "Cargolux"
                        },
                        new
                        {
                            Id = new Guid("95fb0ecc-eb8a-4021-a8dd-9c1b0e38a86c"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9156),
                            FleetSize = 8,
                            HeadQuarter = "Mont-Saint-Guilbert, België",
                            IATACode = "KF",
                            ICAOCode = "ABB",
                            MainAirport = "Charleroi Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9160),
                            Name = "Air Belgium"
                        },
                        new
                        {
                            Id = new Guid("f902dc81-28d7-4fea-938e-7cc3f82c8c0d"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9166),
                            FleetSize = 854,
                            HeadQuarter = "Willis Tower, Chicago",
                            IATACode = "UA",
                            ICAOCode = "UAL",
                            MainAirport = "Chicago O'Hare Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9169),
                            Name = "United Airlines"
                        },
                        new
                        {
                            Id = new Guid("e348e371-91ba-447e-b11a-7154c5d57c09"),
                            FleetSize = 316,
                            HeadQuarter = "Saint-Laurent, Canada",
                            IATACode = "AC",
                            ICAOCode = "ACA",
                            MainAirport = "Toronto Pearson Intl. Airport",
                            Name = "Air Canada"
                        },
                        new
                        {
                            Id = new Guid("37e18490-4683-47aa-a27f-359f0bb60525"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9180),
                            FleetSize = 254,
                            HeadQuarter = "Dubai, Verenigde Arabische Emiraten",
                            IATACode = "EK",
                            ICAOCode = "UAE",
                            MainAirport = "Dubai Intl. Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9183),
                            Name = "Emirates"
                        },
                        new
                        {
                            Id = new Guid("3dd0aca4-548c-4cf0-b540-b035334fea20"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9189),
                            FleetSize = 213,
                            HeadQuarter = "Tokyo, Japan",
                            IATACode = "NH",
                            ICAOCode = "ANA",
                            MainAirport = "Tokyo Narita Airport",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 610, DateTimeKind.Local).AddTicks(9193),
                            Name = "All Nippon Airways"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Airport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ElevationAMSL")
                        .HasPrecision(4)
                        .HasColumnType("int");

                    b.Property<string>("IATACode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength(true);

                    b.Property<string>("ICAOCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RunwayAmount")
                        .HasPrecision(2)
                        .HasColumnType("int");

                    b.Property<int?>("TerminalAmount")
                        .HasPrecision(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fa77f39-e609-43f1-8e66-fe2a0e9447ca"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2733),
                            City = "Zaventem",
                            Country = "België",
                            ElevationAMSL = 56,
                            IATACode = "BRU",
                            ICAOCode = "EBBR",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2751),
                            Name = "Brussels Airport",
                            RunwayAmount = 3,
                            TerminalAmount = 1
                        },
                        new
                        {
                            Id = new Guid("3404a4fa-a787-4e57-8fbe-3db8d2185b63"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2768),
                            City = "Nice",
                            Country = "Frankrijk",
                            ElevationAMSL = 4,
                            IATACode = "NCE",
                            ICAOCode = "LFMN",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2772),
                            Name = "Nice Côte d'Azur",
                            RunwayAmount = 2,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("df0696f7-36ac-4ed6-bdb4-8fec95f0af48"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2779),
                            City = "Narita",
                            Country = "Japan",
                            ElevationAMSL = 41,
                            IATACode = "NRT",
                            ICAOCode = "RJAA",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2784),
                            Name = "Tokyo Narita Intl. Airport",
                            RunwayAmount = 2,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("2346a541-4408-4bae-b53b-e4744ebf265f"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2790),
                            City = "Kelsterbach",
                            Country = "Duitsland",
                            ElevationAMSL = 111,
                            IATACode = "FRA",
                            ICAOCode = "EDDF",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2794),
                            Name = "Franfurt Airport",
                            RunwayAmount = 4,
                            TerminalAmount = 2
                        },
                        new
                        {
                            Id = new Guid("3eec65ab-1991-4530-9a50-67cf55bc210a"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2801),
                            City = "New York City",
                            Country = "USA",
                            ElevationAMSL = 4,
                            IATACode = "JFK",
                            ICAOCode = "KJFK",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2805),
                            Name = "New York JFK Airport",
                            RunwayAmount = 4,
                            TerminalAmount = 6
                        },
                        new
                        {
                            Id = new Guid("7c0357cc-74d6-48e8-a135-95c752614c53"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2818),
                            City = "Newark",
                            Country = "USA",
                            ElevationAMSL = 5,
                            IATACode = "EWR",
                            ICAOCode = "KEWR",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2821),
                            Name = "Newark Liberty Intl. Airport",
                            RunwayAmount = 3,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("3a466d81-3466-4fad-81eb-500eb7be8974"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2828),
                            City = "Haarlemmermeer",
                            Country = "Nederland",
                            ElevationAMSL = -3,
                            IATACode = "AMS",
                            ICAOCode = "EHAM",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2832),
                            Name = "Amsterdam Schiphol Airport",
                            RunwayAmount = 6,
                            TerminalAmount = 1
                        },
                        new
                        {
                            Id = new Guid("585133d3-f45d-4754-961c-bd30487a53b3"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2838),
                            City = "	Roissy-en-France",
                            Country = "Frankrijk",
                            ElevationAMSL = 392,
                            IATACode = "CDG",
                            ICAOCode = "LFPG",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2842),
                            Name = "Paris CDG Airport",
                            RunwayAmount = 4,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("143d781c-12ca-4045-bba3-eaf3f03bb91e"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2849),
                            City = "Mārupe",
                            Country = "Letland",
                            ElevationAMSL = 11,
                            IATACode = "RIX",
                            ICAOCode = "EVRA",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2853),
                            Name = "Riga Intl. Airport",
                            RunwayAmount = 1,
                            TerminalAmount = 1
                        },
                        new
                        {
                            Id = new Guid("8c9dadf9-b912-4798-8be9-cc56ed66a1ce"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2860),
                            City = "Dubai",
                            Country = "Verenigde Arabische Emiraten",
                            ElevationAMSL = 19,
                            IATACode = "DXB",
                            ICAOCode = "OMDB",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2864),
                            Name = "Dubai Intl. Airport",
                            RunwayAmount = 2,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("e6eb509a-68de-4ba0-8b34-b797d1266cfc"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2870),
                            City = "Los Angeles",
                            Country = "USA",
                            ElevationAMSL = 39,
                            IATACode = "LAX",
                            ICAOCode = "KLAX",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2874),
                            Name = "Los Angeles Intl. Airport",
                            RunwayAmount = 4,
                            TerminalAmount = 9
                        },
                        new
                        {
                            Id = new Guid("a3b509c1-1fda-491c-827c-b9042f327479"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2880),
                            City = "Tokyo",
                            Country = "Japan",
                            ElevationAMSL = 6,
                            IATACode = "HND",
                            ICAOCode = "RJTT",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2884),
                            Name = "Tokyo Haneda Intl. Airport",
                            RunwayAmount = 4,
                            TerminalAmount = 3
                        },
                        new
                        {
                            Id = new Guid("f6ea5ef6-d748-481b-9be1-3c7a9d90f3e6"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2891),
                            City = "Sandweiler",
                            Country = "Luxemburg",
                            ElevationAMSL = 376,
                            IATACode = "LUX",
                            ICAOCode = "ELLX",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2895),
                            Name = "Luxembourg Airport",
                            RunwayAmount = 1,
                            TerminalAmount = 2
                        },
                        new
                        {
                            Id = new Guid("01b6c3fe-dfa7-4c0f-b4ca-1497ecc447f7"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2905),
                            City = "Hillingdon",
                            Country = "Engeland",
                            ElevationAMSL = 25,
                            IATACode = "LHR",
                            ICAOCode = "EGLL",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2908),
                            Name = "London Heathrow Airport",
                            RunwayAmount = 2,
                            TerminalAmount = 5
                        },
                        new
                        {
                            Id = new Guid("b2291ef3-86d3-48b4-8bd9-1ee098e57de7"),
                            AddedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2915),
                            City = "Crawley",
                            Country = "Engeland",
                            ElevationAMSL = 62,
                            IATACode = "LGW",
                            ICAOCode = "EGKK",
                            ModifiedOn = new DateTime(2022, 6, 2, 17, 3, 7, 611, DateTimeKind.Local).AddTicks(2918),
                            Name = "London Gatwick Airport",
                            RunwayAmount = 2,
                            TerminalAmount = 2
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Aircraft", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.AircraftType", "AircraftType")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AircraftTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Airline", "Airline")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AircraftType");

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.AircraftAtAirport", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Aircraft", "Aircraft")
                        .WithMany("SpottedAtAirports")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Airport", "Airport")
                        .WithMany("AircraftsAtAirport")
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Airport");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Aircraft", b =>
                {
                    b.Navigation("SpottedAtAirports");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.AircraftType", b =>
                {
                    b.Navigation("Aircrafts");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Airline", b =>
                {
                    b.Navigation("Aircrafts");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Airport", b =>
                {
                    b.Navigation("AircraftsAtAirport");
                });
#pragma warning restore 612, 618
        }
    }
}
