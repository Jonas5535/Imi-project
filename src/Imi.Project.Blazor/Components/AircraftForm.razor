<h1>@PageTitle</h1>

<EditForm Model="@Model" OnInvalidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label for="registration">Registratienummer:</label>
		<InputText id="registration" @bind-Value="Model.Registration" class="form-control w-auto" />
		<ValidationMessage For="@(() => Model.Registration)" />
	</div>
	<div class="form-group">
		<label for="type">Type:</label>
		<InputSelect id="type" @bind-Value="Model.AircraftTypeId" class="form-control w-auto">
			@foreach (var type in Types)
			{
				<option value="@type.Value">@type.Label</option>
			}
		</InputSelect>
		<ValidationMessage For="@(() => Model.AircraftTypeId)" />
	</div>
	<div class="form-group">
		<label for="airline">Maatschappij:</label>
		<InputSelect id="airline" @bind-Value="Model.AirlineId" class="form-control w-auto">
			@foreach (var airline in Airlines)
			{
				<option value="@airline.Value">@airline.Label</option>
			}
		</InputSelect>
		<ValidationMessage For="@(() => Model.AirlineId)" />
	</div>
</EditForm>

@code {
	[Parameter]
	public AircraftFormViewModel Model { get; set; }
	[Parameter]
	public string PageTitle { get; set; }
	[Parameter]
	public IEnumerable<InputSelectItem> Types { get; set; }
	[Parameter]
	public IEnumerable<InputSelectItem> Airlines { get; set; }
	[Parameter]
	public EventCallback OnSubmitClicked { get; set; }

	private void HandleValidSubmit()
	{
		OnSubmitClicked.InvokeAsync();
	}
}
