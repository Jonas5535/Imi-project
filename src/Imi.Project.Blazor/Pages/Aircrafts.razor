@page "/aircraft"
@inject ICRUDService<AircraftListItem, AircraftItem> _aircraftService
@inject IJSRuntime _jsRuntime

@if (!showDetails)
{
	<AircraftDetail Model="aircraft"></AircraftDetail>
}
else
{
	<h1>Vliegtuigen</h1>
	<div class="row">
		@foreach (var aircraft in aircrafts)
		{
			<ListItem Model="aircraft"
				OnCardClicked="ShowDetails"
				OnDeleteClicked="DeleteAsync">
			</ListItem>
		}
	</div>
}

@code {
	private IEnumerable<AircraftListItem> aircrafts = new List<AircraftListItem>();
	private AircraftItem aircraft;
	private bool showDetails = false;

	protected override async Task OnInitializedAsync()
	{
		await ShowList();
	}

	public async Task ShowList()
	{
		aircrafts = await _aircraftService.ListAllAsync();
	}

	public async Task ShowDetails(object item)
	{
		AircraftListItem receivedModel = item as AircraftListItem;
		aircraft = await _aircraftService.GetByIdAsync(receivedModel.Id);
		showDetails = true;
	}

	public async Task DeleteAsync(object item)
	{
		bool confirmed = await _jsRuntime.InvokeAsync<bool>("confirm", "Ben je zeker dat je dit vliegtuig wilt verwijderen?");

		if (confirmed)
		{
			AircraftListItem aircraft = item as AircraftListItem;
			await _aircraftService.DeleteAsync(aircraft.Id);
			await ShowList();
		}
	}
}
