@page "/memory"
@inject IMemoryService _memoryService

@if (!HasStarted)
{
	<MemoryWelcomeCard OnPlayButtonClick="GameInit"></MemoryWelcomeCard>
}
else
{
	<div>
		<h1>Memory</h1>
		<span>Aantal levens: <b>@stats.Lives</b></span>
	</div>
	<div class="row align-self-center mt-4 mx-auto" style="width: 80rem">
		@foreach (var card in MemoryCards)
		{
			<MemoryCard Model="card"
				OnCardClick="HandleSelection">
			</MemoryCard>
		}
		@if (isBusy)
	    {
			<div class="overlay"></div>
	    }
		@if (messagebox.IsShown)
		{
			<Messagebox Model="messagebox"></Messagebox>
		}
	</div>
}

@code {
	private bool HasStarted = false;
	private IEnumerable<MemoryCardModel> MemoryCards;
	private StatsModel stats;
	private bool isBusy = false;
	private MessageBoxModel messagebox = new();

	private void GameInit()
	{
		MemoryCards = _memoryService.GetMemoryCards();
		stats = _memoryService.GetStats();
		HasStarted = true;
	}

	public async Task HandleSelection(object item)
	{
		MemoryCardModel card = item as MemoryCardModel;
		if (!card.MatchFound)
		{
			isBusy = true;
			await _memoryService.HandleSelection(card);

			CheckGameStatus();
			isBusy = false;
		}
	}

	private void CheckGameStatus()
	{
		stats = _memoryService.GetStats();

		if (stats.Lives == 0)
		{
			messagebox = _memoryService.EndGame(false);
		}

		if (stats.RemainingPairs == 0)
		{
			messagebox = _memoryService.EndGame(true);
		}
	}
}

