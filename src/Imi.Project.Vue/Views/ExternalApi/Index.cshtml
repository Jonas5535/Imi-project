@{
	ViewData["Title"] = "Culture corner";
}
<div id="app">
	<div class="d-flex">
			<button class="btn btn-circle align-self-center mb-2 mr-4 oi oi-arrow-left" v-on:click.prevent="goBack"></button>
			<h1 class="d-inline align-self-center mx-auto">Culture corner</h1>
			<button class="btn btn-circle align-self-center mb-2 mr-2 oi oi-arrow-right" v-on:click.prevent="fetchImage"></button>
	</div>

	<section v-if="hasError" class="mt-3">
		<p>De data kan helaas niet geladen worden op dit moment. Probeer het later nog eens</p>
	</section>
	<section v-else>
		<div v-if="isBusy" class="spinner"></div>
		<div v-else class="d-flex mt-3">
			<img v-bind:src="image" class="mx-auto" style="width: 400px"/>
		</div>
	</section>
</div>

@section scripts{
	<script src="~/lib/vue/vue.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>

	<script>
		var apiUrl = 'https://api.waifu.im/random/?&gif=false&is_nsfw=false';

		var app = new Vue({
			el: "#app",
            data: {
                hasError: null,
				image: null,
				isBusy: null,
				history: [],
				totalImages: -1, //This should be similar to the index of the history array and not to the actual amount of images in the array
				currentImage: -1,
			},
            created: function() {
                var self = this;
                self.fetchImage();
			},
            methods: {
                fetchImage: function() {
                    var self = this;
                    self.hasError = false;

                    if (self.currentImage != self.totalImages) {
                        self.goForward();
                    }
                    else {
						self.isBusy = true;

						axios.get(apiUrl)
							.then(function(response) {
								self.image = response.data.images[0].url;
								self.history.push(self.image);
								self.totalImages = self.totalImages + 1 ;
								self.currentImage = self.currentImage + 1;
							})
							.catch(error => {
								console.log(error);
								self.hasError = true;
							})
							.finally(() => self.isBusy = false)
					}
				},

				goBack: function() {
                    var self = this;

                    if (self.currentImage != 0) {
						self.image = self.history[self.currentImage-1];
						self.currentImage = self.currentImage - 1;
					}
				},

                goForward: function() {
                    var self = this;
					
                    self.image = self.history[self.currentImage + 1];
                    self.currentImage = self.currentImage + 1;
				}
			},
		})
	</script>
}